// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: basic-test/bidirectionalstream-api.proto

package basic_test

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//Data Structure
type ChatSupportMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receipient string `protobuf:"bytes,2,opt,name=receipient,proto3" json:"receipient,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChatSupportMessage) Reset() {
	*x = ChatSupportMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_test_bidirectionalstream_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatSupportMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatSupportMessage) ProtoMessage() {}

func (x *ChatSupportMessage) ProtoReflect() protoreflect.Message {
	mi := &file_basic_test_bidirectionalstream_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatSupportMessage.ProtoReflect.Descriptor instead.
func (*ChatSupportMessage) Descriptor() ([]byte, []int) {
	return file_basic_test_bidirectionalstream_api_proto_rawDescGZIP(), []int{0}
}

func (x *ChatSupportMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ChatSupportMessage) GetReceipient() string {
	if x != nil {
		return x.Receipient
	}
	return ""
}

func (x *ChatSupportMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

//Request and Response Payload
type ChatSupportMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId      string              `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	ChatMessage *ChatSupportMessage `protobuf:"bytes,2,opt,name=chatMessage,proto3" json:"chatMessage,omitempty"`
}

func (x *ChatSupportMessageRequest) Reset() {
	*x = ChatSupportMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_test_bidirectionalstream_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatSupportMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatSupportMessageRequest) ProtoMessage() {}

func (x *ChatSupportMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_basic_test_bidirectionalstream_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatSupportMessageRequest.ProtoReflect.Descriptor instead.
func (*ChatSupportMessageRequest) Descriptor() ([]byte, []int) {
	return file_basic_test_bidirectionalstream_api_proto_rawDescGZIP(), []int{1}
}

func (x *ChatSupportMessageRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatSupportMessageRequest) GetChatMessage() *ChatSupportMessage {
	if x != nil {
		return x.ChatMessage
	}
	return nil
}

type ChatSupportMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId      string              `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	ChatMessage *ChatSupportMessage `protobuf:"bytes,2,opt,name=chatMessage,proto3" json:"chatMessage,omitempty"`
}

func (x *ChatSupportMessageResponse) Reset() {
	*x = ChatSupportMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_test_bidirectionalstream_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatSupportMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatSupportMessageResponse) ProtoMessage() {}

func (x *ChatSupportMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_basic_test_bidirectionalstream_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatSupportMessageResponse.ProtoReflect.Descriptor instead.
func (*ChatSupportMessageResponse) Descriptor() ([]byte, []int) {
	return file_basic_test_bidirectionalstream_api_proto_rawDescGZIP(), []int{2}
}

func (x *ChatSupportMessageResponse) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatSupportMessageResponse) GetChatMessage() *ChatSupportMessage {
	if x != nil {
		return x.ChatMessage
	}
	return nil
}

var File_basic_test_bidirectionalstream_api_proto protoreflect.FileDescriptor

var file_basic_test_bidirectionalstream_api_proto_rawDesc = []byte{
	0x0a, 0x28, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x62, 0x69, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x75,
	0x0a, 0x19, 0x43, 0x68, 0x61, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x86, 0x01,
	0x0a, 0x19, 0x43, 0x68, 0x61, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x25, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x17, 0x5a, 0x15, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d,
	0x74, 0x65, 0x73, 0x74, 0x3b, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_basic_test_bidirectionalstream_api_proto_rawDescOnce sync.Once
	file_basic_test_bidirectionalstream_api_proto_rawDescData = file_basic_test_bidirectionalstream_api_proto_rawDesc
)

func file_basic_test_bidirectionalstream_api_proto_rawDescGZIP() []byte {
	file_basic_test_bidirectionalstream_api_proto_rawDescOnce.Do(func() {
		file_basic_test_bidirectionalstream_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_basic_test_bidirectionalstream_api_proto_rawDescData)
	})
	return file_basic_test_bidirectionalstream_api_proto_rawDescData
}

var file_basic_test_bidirectionalstream_api_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_basic_test_bidirectionalstream_api_proto_goTypes = []interface{}{
	(*ChatSupportMessage)(nil),         // 0: basic_test.ChatSupportMessage
	(*ChatSupportMessageRequest)(nil),  // 1: basic_test.ChatSupportMessageRequest
	(*ChatSupportMessageResponse)(nil), // 2: basic_test.ChatSupportMessageResponse
}
var file_basic_test_bidirectionalstream_api_proto_depIdxs = []int32{
	0, // 0: basic_test.ChatSupportMessageRequest.chatMessage:type_name -> basic_test.ChatSupportMessage
	0, // 1: basic_test.ChatSupportMessageResponse.chatMessage:type_name -> basic_test.ChatSupportMessage
	1, // 2: basic_test.ChatSupportMessageService.ChatSupportMessage:input_type -> basic_test.ChatSupportMessageRequest
	2, // 3: basic_test.ChatSupportMessageService.ChatSupportMessage:output_type -> basic_test.ChatSupportMessageResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_basic_test_bidirectionalstream_api_proto_init() }
func file_basic_test_bidirectionalstream_api_proto_init() {
	if File_basic_test_bidirectionalstream_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_basic_test_bidirectionalstream_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatSupportMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_test_bidirectionalstream_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatSupportMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_test_bidirectionalstream_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatSupportMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_basic_test_bidirectionalstream_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_basic_test_bidirectionalstream_api_proto_goTypes,
		DependencyIndexes: file_basic_test_bidirectionalstream_api_proto_depIdxs,
		MessageInfos:      file_basic_test_bidirectionalstream_api_proto_msgTypes,
	}.Build()
	File_basic_test_bidirectionalstream_api_proto = out.File
	file_basic_test_bidirectionalstream_api_proto_rawDesc = nil
	file_basic_test_bidirectionalstream_api_proto_goTypes = nil
	file_basic_test_bidirectionalstream_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatSupportMessageServiceClient is the client API for ChatSupportMessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatSupportMessageServiceClient interface {
	//Client-Streaming API
	ChatSupportMessage(ctx context.Context, opts ...grpc.CallOption) (ChatSupportMessageService_ChatSupportMessageClient, error)
}

type chatSupportMessageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatSupportMessageServiceClient(cc grpc.ClientConnInterface) ChatSupportMessageServiceClient {
	return &chatSupportMessageServiceClient{cc}
}

func (c *chatSupportMessageServiceClient) ChatSupportMessage(ctx context.Context, opts ...grpc.CallOption) (ChatSupportMessageService_ChatSupportMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatSupportMessageService_serviceDesc.Streams[0], "/basic_test.ChatSupportMessageService/ChatSupportMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatSupportMessageServiceChatSupportMessageClient{stream}
	return x, nil
}

type ChatSupportMessageService_ChatSupportMessageClient interface {
	Send(*ChatSupportMessageRequest) error
	Recv() (*ChatSupportMessageResponse, error)
	grpc.ClientStream
}

type chatSupportMessageServiceChatSupportMessageClient struct {
	grpc.ClientStream
}

func (x *chatSupportMessageServiceChatSupportMessageClient) Send(m *ChatSupportMessageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatSupportMessageServiceChatSupportMessageClient) Recv() (*ChatSupportMessageResponse, error) {
	m := new(ChatSupportMessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatSupportMessageServiceServer is the server API for ChatSupportMessageService service.
type ChatSupportMessageServiceServer interface {
	//Client-Streaming API
	ChatSupportMessage(ChatSupportMessageService_ChatSupportMessageServer) error
}

// UnimplementedChatSupportMessageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatSupportMessageServiceServer struct {
}

func (*UnimplementedChatSupportMessageServiceServer) ChatSupportMessage(ChatSupportMessageService_ChatSupportMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method ChatSupportMessage not implemented")
}

func RegisterChatSupportMessageServiceServer(s *grpc.Server, srv ChatSupportMessageServiceServer) {
	s.RegisterService(&_ChatSupportMessageService_serviceDesc, srv)
}

func _ChatSupportMessageService_ChatSupportMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatSupportMessageServiceServer).ChatSupportMessage(&chatSupportMessageServiceChatSupportMessageServer{stream})
}

type ChatSupportMessageService_ChatSupportMessageServer interface {
	Send(*ChatSupportMessageResponse) error
	Recv() (*ChatSupportMessageRequest, error)
	grpc.ServerStream
}

type chatSupportMessageServiceChatSupportMessageServer struct {
	grpc.ServerStream
}

func (x *chatSupportMessageServiceChatSupportMessageServer) Send(m *ChatSupportMessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatSupportMessageServiceChatSupportMessageServer) Recv() (*ChatSupportMessageRequest, error) {
	m := new(ChatSupportMessageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ChatSupportMessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "basic_test.ChatSupportMessageService",
	HandlerType: (*ChatSupportMessageServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ChatSupportMessage",
			Handler:       _ChatSupportMessageService_ChatSupportMessage_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "basic-test/bidirectionalstream-api.proto",
}
